plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// https://mvnrepository.com/artifact/org.mapstruct/mapstruct-processor
	implementation 'org.mapstruct:mapstruct-processor:1.5.3.Final'
	// https://mvnrepository.com/artifact/org.mapstruct/mapstruct
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	// https://mvnrepository.com/artifact/jakarta.validation/jakarta.validation-api
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security
	implementation 'org.springframework.boot:spring-boot-starter-security:3.2.2'
	// https://mvnrepository.com/artifact/org.postgresql/postgresql
	implementation 'org.postgresql:postgresql:42.7.1'
}
tasks.withType(JavaCompile) {
	options.with {
		compilerArgs = ['-Amapstruct.defaultComponentModel=spring']
	}
}
tasks.named('test') {
	useJUnitPlatform()
}

